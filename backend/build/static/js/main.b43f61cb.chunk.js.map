{"version":3,"sources":["components/Note.js","services/notes.js","components/Footer.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","impoartant","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","Notification","message","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","notesToShow","filter","important","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"oOAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,WACb,qBAAuB,iBAC7B,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCUjC,EAfA,WAEX,OADgBK,IAAMC,IAHV,cAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAbJ,aAaI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCE9BK,EAfA,WAOX,OACI,yBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKN,6BACA,qDCEGC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,yBAAKlB,UAAU,SACVkB,ICsFEC,EAzFH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,IAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,MAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACNC,IAEK1B,MAAK,SAAA2B,GACFT,EAASS,QAElB,IAsBHC,QAAQC,IAAIZ,GAEZ,IAAMa,EAAcT,EACdJ,EACAA,EAAMc,QAAO,SAAAxC,GAAI,OAAuB,IAAnBA,EAAKyC,aAEhCJ,QAAQC,IAAIC,GA0BZ,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcjB,QAASU,IACvB,6BACI,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BACKS,EAAYG,KAAI,SAAC1C,GAAD,OACb,kBAAC,EAAD,CAAM2C,IAAK3C,EAAKc,GAAId,KAAMA,EAAMC,iBAAkB,kBA/DvC,SAACa,GACxB,IAAMd,EAAO0B,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAOA,KAChCgC,EAAW,2BAAQ9C,GAAR,IAAcyC,WAAYzC,EAAKyC,YAEhDN,EACYrB,EAAIgC,GACXrC,MAAK,SAAAsC,GACFpB,EAASD,EAAMgB,KAAI,SAAA1C,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO+C,SAEtDC,OAAM,SAAAC,GACHhB,EAAgB,SAAD,OACFjC,EAAKK,QADH,sCAGf6C,YAAW,WACPjB,EAAgB,QACjB,KACHN,EAASD,EAAMc,QAAO,SAAAK,GAAC,OAAIA,EAAE/B,KAAOA,SA+CwBqC,CAAmBnD,EAAKc,WAGxF,0BAAMsC,SArCE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACflD,QAASuB,EACT4B,MAAM,IAAIC,MAAOC,cACjBjB,UAAWkB,KAAKC,SAAW,GAC3B9C,GAAIY,EAAMmC,OAAS,GAGvB1B,EACYoB,GACP9C,MAAK,SAAAsC,GACFpB,EAASD,EAAMoC,OAAOf,IACtBlB,EAAW,SAyBX,2BAAOkC,MAAOnC,EAASoC,SApBV,SAACX,GACtBxB,EAAWwB,EAAMY,OAAOF,UAoBhB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MCrFZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b43f61cb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.impoartant\r\n        ? 'make not important' : 'make important'\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Kyiv 2020</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Footer from './components/Footer'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = (props) => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('')\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes)\r\n            })\r\n    }, [])\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changedNote = { ...note, important: !note.important }\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Note '${note.content}' was already removed from server`\r\n                )\r\n                setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                }, 5000)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    console.log(notes)\r\n\r\n    const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter(note => note.important === true)\r\n\r\n    console.log(notesToShow)\r\n\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() < 0.5,\r\n            id: notes.length + 1,\r\n        }\r\n\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n\r\n    }\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {notesToShow.map((note) =>\r\n                    <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input value={newNote} onChange={handleNoteChange} />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}